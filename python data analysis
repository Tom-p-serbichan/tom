import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

# Load the dataset into a Pandas DataFrame
df = pd.read_csv('your_dataset.csv')  # Replace with your dataset path
print("First few rows of the dataset:")
print(df.head())

# Data cleaning
# Check for missing values
print("Missing values in each column:")
print(df.isnull().sum())

# Handling missing values - example: drop rows with missing values
df.dropna(inplace=True)  # or use df.fillna(value) for imputation

# Removing redundant or unnecessary columns
# Example: drop columns that are not needed
df.drop(columns=['unnecessary_column1', 'unnecessary_column2'], inplace=True)

# Basic statistics of the dataset
print("Basic statistics:")
print(df.describe())

# Data visualization
# Histograms for numerical columns
df.hist(figsize=(12, 8), bins=30)
plt.tight_layout()
plt.show()

# Scatter plot example (change 'x_column' and 'y_column' accordingly)
plt.figure(figsize=(10, 6))
sns.scatterplot(data=df, x='x_column', y='y_column')
plt.title('Scatter Plot of X vs Y')
plt.show()

# Bar plot for categorical data
top_selling_products = df['product'].value_counts().head(10)
plt.figure(figsize=(12, 6))
top_selling_products.plot(kind='bar')
plt.title('Top 10 Selling Products')
plt.xlabel('Product')
plt.ylabel('Quantity Sold')
plt.xticks(rotation=45)
plt.show()

# Analyze sales trends over time
df['date'] = pd.to_datetime(df['date'])  # Ensure the date column is in datetime format
df['month'] = df['date'].dt.month
df['day_of_week'] = df['date'].dt.day_name()

# Busiest months
monthly_sales = df.groupby('month').size()
plt.figure(figsize=(10, 6))
monthly_sales.plot(kind='bar')
plt.title('Sales by Month')
plt.xlabel('Month')
plt.ylabel('Number of Sales')
plt.xticks(rotation=0)
plt.show()

# Busiest days of the week
weekly_sales = df['day_of_week'].value_counts()
plt.figure(figsize=(10, 6))
weekly_sales.plot(kind='bar')
plt.title('Sales by Day of the Week')
plt.xlabel('Day of the Week')
plt.ylabel('Number of Sales')
plt.xticks(rotation=45)
plt.show()

# Explore top-selling countries
top_countries = df['country'].value_counts().head(10)
plt.figure(figsize=(12, 6))
top_countries.plot(kind='bar')
plt.title('Top 10 Selling Countries')
plt.xlabel('Country')
plt.ylabel('Quantity Sold')
plt.xticks(rotation=45)
plt.show()

# Identify outliers
# Example using boxplot for a numerical column
plt.figure(figsize=(10, 6))
sns.boxplot(data=df, x='sales_amount')  # Change 'sales_amount' to your relevant column
plt.title('Boxplot for Sales Amount')
plt.show()

# Conclusions and summary
print("Summary of findings:")
print("1. Cleaned the dataset by handling missing values and removing unnecessary columns.")
print("2. The basic statistics show the distribution and central tendency of the data.")
print("3. Visualizations indicate trends in sales, including peak months and days.")
print("4. The top-selling products and countries have been identified.")
print("5. Outliers were detected which may need further investigation.")

# Optionally, save cleaned DataFrame to a new CSV
df.to_csv('cleaned_dataset.csv', index=False)
